{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let NotesService = /*#__PURE__*/(() => {\n  class NotesService {\n    constructor() {\n      this.flat = '\\u{266D}';\n      this.sharp = '\\u{266F}';\n      this.notes = [{\n        index: 0,\n        name: 'C',\n        isNatural: true,\n        isGroupedWithC: true\n      }, {\n        index: 1,\n        name: 'C' + this.sharp + ' / D' + this.flat,\n        isNatural: false,\n        isGroupedWithC: true\n      }, {\n        index: 2,\n        name: 'D',\n        isNatural: true,\n        isGroupedWithC: true\n      }, {\n        index: 3,\n        name: 'D' + this.sharp + ' / E' + this.flat,\n        isNatural: false,\n        isGroupedWithC: true\n      }, {\n        index: 4,\n        name: 'E',\n        isNatural: true,\n        isGroupedWithC: true\n      }, {\n        index: 5,\n        name: 'F',\n        isNatural: true,\n        isGroupedWithC: false\n      }, {\n        index: 6,\n        name: 'F' + this.sharp + ' / G' + this.flat,\n        isNatural: false,\n        isGroupedWithC: false\n      }, {\n        index: 7,\n        name: 'G',\n        isNatural: true,\n        isGroupedWithC: false\n      }, {\n        index: 8,\n        name: 'G' + this.sharp + ' / A' + this.flat,\n        isNatural: false,\n        isGroupedWithC: false\n      }, {\n        index: 9,\n        name: 'A',\n        isNatural: true,\n        isGroupedWithC: false\n      }, {\n        index: 10,\n        name: 'A' + this.sharp + ' / B' + this.flat,\n        isNatural: false,\n        isGroupedWithC: false\n      }, {\n        index: 11,\n        name: 'B',\n        isNatural: true,\n        isGroupedWithC: false\n      }];\n      this.numberOfNotes = 12;\n    }\n    getNote(index) {\n      while (index >= this.numberOfNotes) {\n        index = index - this.numberOfNotes;\n      }\n      return this.notes[index];\n    }\n    getNoteIndex(note) {\n      return this.notes.indexOf(note);\n    }\n    getNotes() {\n      return this.notes;\n    }\n    static #_ = this.ɵfac = function NotesService_Factory(t) {\n      return new (t || NotesService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: NotesService,\n      factory: NotesService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NotesService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}