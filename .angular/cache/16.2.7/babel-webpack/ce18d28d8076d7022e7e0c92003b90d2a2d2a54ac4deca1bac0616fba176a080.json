{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../chord-shapes.service\";\nimport * as i3 from \"../notes.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./piano/piano.component\";\nfunction ChordsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h3\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"app-piano\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chord_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(chord_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"highlightedNotes\", chord_r1.notes);\n  }\n}\nexport let ChordsComponent = /*#__PURE__*/(() => {\n  class ChordsComponent {\n    constructor(route, router, chordsService, notesService) {\n      this.route = route;\n      this.router = router;\n      this.chordsService = chordsService;\n      this.notesService = notesService;\n      this.chords = [];\n      this.route.paramMap.subscribe(() => this.chords = this.getChords());\n    }\n    ngOnInit() {\n      this.chords = this.getChords();\n    }\n    getChords() {\n      const route = this.route.snapshot.paramMap.get('chord-shape');\n      const chordShape = this.chordsService.getChordShape(route);\n      if (chordShape) {\n        let chords = new Array(this.notesService.numberOfNotes);\n        for (let index = 0; index < chords.length; index++) {\n          chords[index] = this.getChord(this.notesService.getNote(index), chordShape);\n        }\n        return chords.sort((a, b) => a.name > b.name ? 1 : a.name === b.name ? 0 : -1);\n      } else {\n        this.router.navigate(['..'], {\n          relativeTo: this.route\n        });\n      }\n    }\n    getChord(rootNote, chordShape) {\n      let notes = new Array(chordShape.noteIndexes.length);\n      for (let index = 0; index < notes.length; index++) {\n        notes[index] = this.notesService.getNote(rootNote.index + chordShape.noteIndexes[index]);\n      }\n      return {\n        name: rootNote.name + ' ' + chordShape.name,\n        notes: notes\n      };\n    }\n    static #_ = this.ɵfac = function ChordsComponent_Factory(t) {\n      return new (t || ChordsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ChordShapesService), i0.ɵɵdirectiveInject(i3.NotesService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChordsComponent,\n      selectors: [[\"app-chords\"]],\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"chords\", \"center\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"], [1, \"center\"], [3, \"highlightedNotes\"]],\n      template: function ChordsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, ChordsComponent_div_1_Template, 4, 2, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.chords);\n        }\n      },\n      dependencies: [i4.NgForOf, i5.PianoComponent],\n      styles: [\".center[_ngcontent-%COMP%]{display:flex;justify-content:center}.root[_ngcontent-%COMP%]{max-width:1024px;margin-left:auto;margin-right:auto}.github[_ngcontent-%COMP%]{margin-left:.5rem;color:var(--accent-light-color);text-shadow:0 0 .25rem var(--shadow-color);margin-bottom:.5rem}h1[_ngcontent-%COMP%]{color:var(--highlight-color);text-shadow:0 0 .25rem var(--shadow-color);margin-bottom:.25rem;font-size:2rem}footer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-left:.5rem;color:var(--accent-light-color)}footer[_ngcontent-%COMP%]{font-size:.75rem;height:-moz-fit-content;height:fit-content;margin-top:1.5rem;text-shadow:0 0 .25rem var(--shadow-color);display:flex;flex-direction:row;flex-wrap:wrap}.icon[_ngcontent-%COMP%]{display:inline-flex;align-self:center}.icon[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{height:2rem;width:2rem;margin-right:1rem;top:1rem;position:relative;fill:var(--foreground-color);filter:drop-shadow(0 0 .25rem var(--shadow-color))}\", \".chords[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;margin-top:.5rem}.card[_ngcontent-%COMP%]{background-color:var(--background-light-color);border-radius:.5rem;margin:.5rem;padding:.5rem}.card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{color:var(--highlight-color);font-weight:400;text-shadow:0 0 .25rem var(--shadow-color);height:1.5rem;margin:.25rem .5rem .5rem;font-size:1rem}\"]\n    });\n  }\n  return ChordsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}